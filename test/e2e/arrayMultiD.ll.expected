; ModuleID = 'Module'
source_filename = "Module"
target triple = "x86_64-pc-linux-gnu"

%Object_Vtable_type = type { %Object_Vtable_type*, i8* }
%i32arr_Vtable_type = type { %Object_Vtable_type*, i8* }
%i32arrarr_Vtable_type = type { %Object_Vtable_type*, i8* }
%Object = type { %Object_Vtable_type* }
%i32arr = type { %i32arr_Vtable_type*, i32*, i32 }
%i32arrarr = type { %i32arrarr_Vtable_type*, %i32arr*, i32 }

@printIntFormat = private constant [4 x i8] c"%d\0A\00", align 1
@castErrFormat = private constant [38 x i8] c"Narrow cast err: %s is not a type %s\0A\00", align 1
@outOfBoundsFormat = private constant [72 x i8] c"Line: %d | Array out of bounds exception at line. Index:%d | Length:%d\0A\00", align 1
@negativeLenFormat = private constant [62 x i8] c"Line: %d | Array len cannot be negative. Length attempted:%d\0A\00", align 1
@nullDerefFormat = private constant [29 x i8] c"Line: %d | Null dereference\0A\00", align 1
@divByZeroFormat = private constant [37 x i8] c"Line: %d | Divide by zero exception\0A\00", align 1
@Object_class_name = private constant [7 x i8] c"Object\00", align 1
@Object_Vtable = global %Object_Vtable_type { %Object_Vtable_type* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @Object_class_name, i32 0, i32 0) }
@i32arr_class_name = private constant [7 x i8] c"i32arr\00", align 1
@i32arr_Vtable = global %i32arr_Vtable_type { %Object_Vtable_type* @Object_Vtable, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @i32arr_class_name, i32 0, i32 0) }
@i32arrarr_class_name = private constant [10 x i8] c"i32arrarr\00", align 1
@i32arrarr_Vtable = global %i32arrarr_Vtable_type { %Object_Vtable_type* @Object_Vtable, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @i32arrarr_class_name, i32 0, i32 0) }

declare i32 @printf(i8*, ...)

declare i8* @malloc(i32)

declare i8* @calloc(i32, i32)

declare void @free(i8*)

declare void @exit(i32)

define i1 @Object_IsA(%Object* %0, %Object_Vtable_type* %1, i8* %2) {
entry:
  %object = alloca %Object*, align 8
  store %Object* %0, %Object** %object, align 8
  %vtbl = alloca %Object_Vtable_type*, align 8
  store %Object_Vtable_type* %1, %Object_Vtable_type** %vtbl, align 8
  %name = alloca i8*, align 8
  store i8* %2, i8** %name, align 8
  %3 = load %Object*, %Object** %object, align 8
  %4 = ptrtoint %Object* %3 to i64
  %equal = icmp eq i64 %4, 0
  %not = xor i1 %equal, true
  br i1 %not, label %then, label %else12

then:                                             ; preds = %entry
  %5 = load %Object*, %Object** %object, align 8
  %6 = icmp eq %Object* %5, null
  br i1 %6, label %nullDerefThen1, label %nullDerefElse

nullDerefThen1:                                   ; preds = %then
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse

nullDerefElse:                                    ; preds = %nullDerefThen1, %then
  %8 = getelementptr inbounds %Object, %Object* %5, i32 0, i32 0
  %9 = load %Object_Vtable_type*, %Object_Vtable_type** %8, align 8
  store %Object_Vtable_type* %9, %Object_Vtable_type** %vtbl, align 8
  br label %loopcond

loopcond:                                         ; preds = %ifcont, %nullDerefElse
  %10 = load %Object_Vtable_type*, %Object_Vtable_type** %vtbl, align 8
  %11 = ptrtoint %Object_Vtable_type* %10 to i64
  %equal2 = icmp eq i64 %11, 0
  %not3 = xor i1 %equal2, true
  br i1 %not3, label %loop, label %loopend

loop:                                             ; preds = %loopcond
  %12 = load %Object_Vtable_type*, %Object_Vtable_type** %vtbl, align 8
  %13 = icmp eq %Object_Vtable_type* %12, null
  br i1 %13, label %nullDerefThen4, label %nullDerefElse5

nullDerefThen4:                                   ; preds = %loop
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse5

nullDerefElse5:                                   ; preds = %nullDerefThen4, %loop
  %15 = getelementptr inbounds %Object_Vtable_type, %Object_Vtable_type* %12, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = load i8*, i8** %name, align 8
  %18 = ptrtoint i8* %16 to i64
  %19 = ptrtoint i8* %17 to i64
  %equal6 = icmp eq i64 %18, %19
  br i1 %equal6, label %then7, label %else

then7:                                            ; preds = %nullDerefElse5
  br label %loopend

else:                                             ; preds = %nullDerefElse5
  %20 = load %Object_Vtable_type*, %Object_Vtable_type** %vtbl, align 8
  %21 = icmp eq %Object_Vtable_type* %20, null
  br i1 %21, label %nullDerefThen8, label %nullDerefElse9

nullDerefThen8:                                   ; preds = %else
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse9

nullDerefElse9:                                   ; preds = %nullDerefThen8, %else
  %23 = getelementptr inbounds %Object_Vtable_type, %Object_Vtable_type* %20, i32 0, i32 0
  %24 = load %Object_Vtable_type*, %Object_Vtable_type** %23, align 8
  store %Object_Vtable_type* %24, %Object_Vtable_type** %vtbl, align 8
  br label %ifcont

ifcont:                                           ; preds = %nullDerefElse9
  br label %loopcond

loopend:                                          ; preds = %then7, %loopcond
  %25 = load %Object_Vtable_type*, %Object_Vtable_type** %vtbl, align 8
  %26 = ptrtoint %Object_Vtable_type* %25 to i64
  %equal10 = icmp eq i64 %26, 0
  %not11 = xor i1 %equal10, true
  br label %ifcont13

else12:                                           ; preds = %entry
  br label %ifcont13

ifcont13:                                         ; preds = %else12, %loopend
  %iftmp = phi i1 [ %not11, %loopend ], [ false, %else12 ]
  ret i1 %iftmp
}

define void @i32arr_Constructor(%i32arr* %0, %i32arr_Vtable_type* %1, i32* %2, i32 %3) {
entry:
  %this = alloca %i32arr*, align 8
  store %i32arr* %0, %i32arr** %this, align 8
  %vtable = alloca %i32arr_Vtable_type*, align 8
  store %i32arr_Vtable_type* %1, %i32arr_Vtable_type** %vtable, align 8
  %data = alloca i32*, align 8
  store i32* %2, i32** %data, align 8
  %length = alloca i32, align 4
  store i32 %3, i32* %length, align 4
  %4 = load %i32arr_Vtable_type*, %i32arr_Vtable_type** %vtable, align 8
  %5 = load %i32arr*, %i32arr** %this, align 8
  %6 = icmp eq %i32arr* %5, null
  br i1 %6, label %nullDerefThen1, label %nullDerefElse

nullDerefThen1:                                   ; preds = %entry
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse

nullDerefElse:                                    ; preds = %nullDerefThen1, %entry
  %8 = getelementptr inbounds %i32arr, %i32arr* %5, i32 0, i32 0
  store %i32arr_Vtable_type* %4, %i32arr_Vtable_type** %8, align 8
  %9 = load i32*, i32** %data, align 8
  %10 = load %i32arr*, %i32arr** %this, align 8
  %11 = icmp eq %i32arr* %10, null
  br i1 %11, label %nullDerefThen2, label %nullDerefElse3

nullDerefThen2:                                   ; preds = %nullDerefElse
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse3

nullDerefElse3:                                   ; preds = %nullDerefThen2, %nullDerefElse
  %13 = getelementptr inbounds %i32arr, %i32arr* %10, i32 0, i32 1
  store i32* %9, i32** %13, align 8
  %14 = load i32, i32* %length, align 4
  %15 = load %i32arr*, %i32arr** %this, align 8
  %16 = icmp eq %i32arr* %15, null
  br i1 %16, label %nullDerefThen4, label %nullDerefElse5

nullDerefThen4:                                   ; preds = %nullDerefElse3
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse5

nullDerefElse5:                                   ; preds = %nullDerefThen4, %nullDerefElse3
  %18 = getelementptr inbounds %i32arr, %i32arr* %15, i32 0, i32 2
  store i32 %14, i32* %18, align 4
  ret void
}

define void @i32arrarr_Constructor(%i32arrarr* %0, %i32arrarr_Vtable_type* %1, %i32arr* %2, i32 %3) {
entry:
  %this = alloca %i32arrarr*, align 8
  store %i32arrarr* %0, %i32arrarr** %this, align 8
  %vtable = alloca %i32arrarr_Vtable_type*, align 8
  store %i32arrarr_Vtable_type* %1, %i32arrarr_Vtable_type** %vtable, align 8
  %data = alloca %i32arr*, align 8
  store %i32arr* %2, %i32arr** %data, align 8
  %length = alloca i32, align 4
  store i32 %3, i32* %length, align 4
  %4 = load %i32arrarr_Vtable_type*, %i32arrarr_Vtable_type** %vtable, align 8
  %5 = load %i32arrarr*, %i32arrarr** %this, align 8
  %6 = icmp eq %i32arrarr* %5, null
  br i1 %6, label %nullDerefThen1, label %nullDerefElse

nullDerefThen1:                                   ; preds = %entry
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse

nullDerefElse:                                    ; preds = %nullDerefThen1, %entry
  %8 = getelementptr inbounds %i32arrarr, %i32arrarr* %5, i32 0, i32 0
  store %i32arrarr_Vtable_type* %4, %i32arrarr_Vtable_type** %8, align 8
  %9 = load %i32arr*, %i32arr** %data, align 8
  %10 = load %i32arrarr*, %i32arrarr** %this, align 8
  %11 = icmp eq %i32arrarr* %10, null
  br i1 %11, label %nullDerefThen2, label %nullDerefElse3

nullDerefThen2:                                   ; preds = %nullDerefElse
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse3

nullDerefElse3:                                   ; preds = %nullDerefThen2, %nullDerefElse
  %13 = getelementptr inbounds %i32arrarr, %i32arrarr* %10, i32 0, i32 1
  store %i32arr* %9, %i32arr** %13, align 8
  %14 = load i32, i32* %length, align 4
  %15 = load %i32arrarr*, %i32arrarr** %this, align 8
  %16 = icmp eq %i32arrarr* %15, null
  br i1 %16, label %nullDerefThen4, label %nullDerefElse5

nullDerefThen4:                                   ; preds = %nullDerefElse3
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse5

nullDerefElse5:                                   ; preds = %nullDerefThen4, %nullDerefElse3
  %18 = getelementptr inbounds %i32arrarr, %i32arrarr* %15, i32 0, i32 2
  store i32 %14, i32* %18, align 4
  ret void
}

define i32 @main() {
entry:
  %sum = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %x = alloca %i32arrarr*, align 8
  store %i32arrarr* null, %i32arrarr** %x, align 8
  br i1 false, label %negativeLenThen1, label %negativeLenCont

negativeLenThen1:                                 ; preds = %entry
  br label %negativeLenCont

negativeLenCont:                                  ; preds = %negativeLenThen1, %entry
  %newArrayResult = alloca %i32arrarr, align 8
  %0 = call dereferenceable_or_null(240) i8* @calloc(i32 10, i32 24)
  %1 = bitcast i8* %0 to %i32arr*
  call void @i32arrarr_Constructor(%i32arrarr* nonnull %newArrayResult, %i32arrarr_Vtable_type* nonnull @i32arrarr_Vtable, %i32arr* %1, i32 10)
  store %i32arrarr* %newArrayResult, %i32arrarr** %x, align 8
  store i32 0, i32* %i, align 4
  store i32 0, i32* %j, align 4
  br label %loopcond

loopcond:                                         ; preds = %loopend, %negativeLenCont
  %storemerge = phi i32 [ 0, %negativeLenCont ], [ %add34, %loopend ]
  store i32 %storemerge, i32* %i, align 4
  %slt = icmp slt i32 %storemerge, 10
  br i1 %slt, label %loop, label %loopend35

loop:                                             ; preds = %loopcond
  br i1 false, label %negativeLenThen2, label %negativeLenCont3

negativeLenThen2:                                 ; preds = %loop
  br label %negativeLenCont3

negativeLenCont3:                                 ; preds = %negativeLenThen2, %loop
  %newArrayResult4 = alloca %i32arr, align 8
  %2 = call dereferenceable_or_null(20) i8* @calloc(i32 5, i32 4)
  %3 = bitcast i8* %2 to i32*
  call void @i32arr_Constructor(%i32arr* nonnull %newArrayResult4, %i32arr_Vtable_type* nonnull @i32arr_Vtable, i32* %3, i32 5)
  %4 = load i32, i32* %i, align 4
  %5 = load %i32arrarr*, %i32arrarr** %x, align 8
  %6 = icmp eq %i32arrarr* %5, null
  br i1 %6, label %nullDerefThen5, label %nullDerefElse

nullDerefThen5:                                   ; preds = %negativeLenCont3
  %7 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 9)
  call void @exit(i32 -1)
  br label %nullDerefElse

nullDerefElse:                                    ; preds = %nullDerefThen5, %negativeLenCont3
  %8 = getelementptr inbounds %i32arrarr, %i32arrarr* %5, i64 0, i32 1
  %baseArrPtr = load %i32arr*, %i32arr** %8, align 8
  %9 = load %i32arrarr*, %i32arrarr** %x, align 8
  %10 = icmp eq %i32arrarr* %9, null
  br i1 %10, label %nullDerefThen6, label %nullDerefElse7

nullDerefThen6:                                   ; preds = %nullDerefElse
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 9)
  call void @exit(i32 -1)
  br label %nullDerefElse7

nullDerefElse7:                                   ; preds = %nullDerefThen6, %nullDerefElse
  %12 = getelementptr inbounds %i32arrarr, %i32arrarr* %9, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %.not72 = icmp slt i32 %4, %13
  br i1 %.not72, label %boundsCheckElse, label %boundsCheckThen8

boundsCheckThen8:                                 ; preds = %nullDerefElse7
  %14 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([72 x i8], [72 x i8]* @outOfBoundsFormat, i64 0, i64 0), i32 9, i32 %4, i32 %13)
  call void @exit(i32 -1)
  br label %boundsCheckElse

boundsCheckElse:                                  ; preds = %boundsCheckThen8, %nullDerefElse7
  %15 = sext i32 %4 to i64
  %16 = getelementptr inbounds %i32arr, %i32arr* %baseArrPtr, i64 %15
  %loadRefTypeBeforeSave = load %i32arr, %i32arr* %newArrayResult4, align 8
  store %i32arr %loadRefTypeBeforeSave, %i32arr* %16, align 8
  br label %loopcond9

loopcond9:                                        ; preds = %boundsCheckElse32, %boundsCheckElse
  %storemerge73 = phi i32 [ 0, %boundsCheckElse ], [ %add33, %boundsCheckElse32 ]
  store i32 %storemerge73, i32* %j, align 4
  %slt10 = icmp slt i32 %storemerge73, 5
  br i1 %slt10, label %loop11, label %loopend

loop11:                                           ; preds = %loopcond9
  %17 = load i32, i32* %i, align 4
  %mul = mul i32 %17, 10
  %18 = load i32, i32* %j, align 4
  %add = add i32 %mul, %18
  %19 = load %i32arrarr*, %i32arrarr** %x, align 8
  %20 = icmp eq %i32arrarr* %19, null
  br i1 %20, label %nullDerefThen12, label %nullDerefElse13

nullDerefThen12:                                  ; preds = %loop11
  %21 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 12)
  call void @exit(i32 -1)
  br label %nullDerefElse13

nullDerefElse13:                                  ; preds = %nullDerefThen12, %loop11
  %22 = getelementptr inbounds %i32arrarr, %i32arrarr* %19, i64 0, i32 1
  %baseArrPtr14 = load %i32arr*, %i32arr** %22, align 8
  %23 = load %i32arrarr*, %i32arrarr** %x, align 8
  %24 = icmp eq %i32arrarr* %23, null
  br i1 %24, label %nullDerefThen15, label %nullDerefElse16

nullDerefThen15:                                  ; preds = %nullDerefElse13
  %25 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 12)
  call void @exit(i32 -1)
  br label %nullDerefElse16

nullDerefElse16:                                  ; preds = %nullDerefThen15, %nullDerefElse13
  %26 = getelementptr inbounds %i32arrarr, %i32arrarr* %23, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %.not74 = icmp slt i32 %17, %27
  br i1 %.not74, label %boundsCheckElse18, label %boundsCheckThen17

boundsCheckThen17:                                ; preds = %nullDerefElse16
  %28 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([72 x i8], [72 x i8]* @outOfBoundsFormat, i64 0, i64 0), i32 12, i32 %17, i32 %27)
  call void @exit(i32 -1)
  br label %boundsCheckElse18

boundsCheckElse18:                                ; preds = %boundsCheckThen17, %nullDerefElse16
  %29 = sext i32 %17 to i64
  %30 = icmp eq %i32arr* %baseArrPtr14, null
  br i1 %30, label %nullDerefThen19, label %nullDerefElse20

nullDerefThen19:                                  ; preds = %boundsCheckElse18
  %31 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 12)
  call void @exit(i32 -1)
  br label %nullDerefElse20

nullDerefElse20:                                  ; preds = %nullDerefThen19, %boundsCheckElse18
  %32 = getelementptr inbounds %i32arr, %i32arr* %baseArrPtr14, i64 %29, i32 1
  %baseArrPtr21 = load i32*, i32** %32, align 8
  %33 = load i32, i32* %i, align 4
  %34 = load %i32arrarr*, %i32arrarr** %x, align 8
  %35 = icmp eq %i32arrarr* %34, null
  br i1 %35, label %nullDerefThen22, label %nullDerefElse23

nullDerefThen22:                                  ; preds = %nullDerefElse20
  %36 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 12)
  call void @exit(i32 -1)
  br label %nullDerefElse23

nullDerefElse23:                                  ; preds = %nullDerefThen22, %nullDerefElse20
  %37 = getelementptr inbounds %i32arrarr, %i32arrarr* %34, i64 0, i32 1
  %baseArrPtr24 = load %i32arr*, %i32arr** %37, align 8
  %38 = load %i32arrarr*, %i32arrarr** %x, align 8
  %39 = icmp eq %i32arrarr* %38, null
  br i1 %39, label %nullDerefThen25, label %nullDerefElse26

nullDerefThen25:                                  ; preds = %nullDerefElse23
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 12)
  call void @exit(i32 -1)
  br label %nullDerefElse26

nullDerefElse26:                                  ; preds = %nullDerefThen25, %nullDerefElse23
  %41 = getelementptr inbounds %i32arrarr, %i32arrarr* %38, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %.not75 = icmp slt i32 %33, %42
  br i1 %.not75, label %boundsCheckElse28, label %boundsCheckThen27

boundsCheckThen27:                                ; preds = %nullDerefElse26
  %43 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([72 x i8], [72 x i8]* @outOfBoundsFormat, i64 0, i64 0), i32 12, i32 %33, i32 %42)
  call void @exit(i32 -1)
  br label %boundsCheckElse28

boundsCheckElse28:                                ; preds = %boundsCheckThen27, %nullDerefElse26
  %44 = sext i32 %33 to i64
  %45 = icmp eq %i32arr* %baseArrPtr24, null
  br i1 %45, label %nullDerefThen29, label %nullDerefElse30

nullDerefThen29:                                  ; preds = %boundsCheckElse28
  %46 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 12)
  call void @exit(i32 -1)
  br label %nullDerefElse30

nullDerefElse30:                                  ; preds = %nullDerefThen29, %boundsCheckElse28
  %47 = getelementptr inbounds %i32arr, %i32arr* %baseArrPtr24, i64 %44, i32 2
  %48 = load i32, i32* %47, align 4
  %.not76 = icmp slt i32 %18, %48
  br i1 %.not76, label %boundsCheckElse32, label %boundsCheckThen31

boundsCheckThen31:                                ; preds = %nullDerefElse30
  %49 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([72 x i8], [72 x i8]* @outOfBoundsFormat, i64 0, i64 0), i32 12, i32 %18, i32 %48)
  call void @exit(i32 -1)
  br label %boundsCheckElse32

boundsCheckElse32:                                ; preds = %boundsCheckThen31, %nullDerefElse30
  %50 = sext i32 %18 to i64
  %51 = getelementptr inbounds i32, i32* %baseArrPtr21, i64 %50
  store i32 %add, i32* %51, align 4
  %52 = load i32, i32* %j, align 4
  %add33 = add i32 %52, 1
  br label %loopcond9

loopend:                                          ; preds = %loopcond9
  %53 = load i32, i32* %i, align 4
  %add34 = add i32 %53, 1
  br label %loopcond

loopend35:                                        ; preds = %loopcond
  store i32 0, i32* %sum, align 4
  br label %loopcond36

loopcond36:                                       ; preds = %loopend65, %loopend35
  %storemerge68 = phi i32 [ 0, %loopend35 ], [ %add66, %loopend65 ]
  store i32 %storemerge68, i32* %i, align 4
  %slt37 = icmp slt i32 %storemerge68, 10
  br i1 %slt37, label %loop38, label %loopend67

loop38:                                           ; preds = %loopcond36
  br label %loopcond39

loopcond39:                                       ; preds = %boundsCheckElse62, %loop38
  %storemerge69 = phi i32 [ 0, %loop38 ], [ %add64, %boundsCheckElse62 ]
  store i32 %storemerge69, i32* %j, align 4
  %slt40 = icmp slt i32 %storemerge69, 5
  br i1 %slt40, label %loop41, label %loopend65

loop41:                                           ; preds = %loopcond39
  %54 = load i32, i32* %sum, align 4
  %55 = load i32, i32* %j, align 4
  %56 = load i32, i32* %i, align 4
  %57 = load %i32arrarr*, %i32arrarr** %x, align 8
  %58 = icmp eq %i32arrarr* %57, null
  br i1 %58, label %nullDerefThen42, label %nullDerefElse43

nullDerefThen42:                                  ; preds = %loop41
  %59 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 23)
  call void @exit(i32 -1)
  br label %nullDerefElse43

nullDerefElse43:                                  ; preds = %nullDerefThen42, %loop41
  %60 = getelementptr inbounds %i32arrarr, %i32arrarr* %57, i64 0, i32 1
  %baseArrPtr44 = load %i32arr*, %i32arr** %60, align 8
  %61 = load %i32arrarr*, %i32arrarr** %x, align 8
  %62 = icmp eq %i32arrarr* %61, null
  br i1 %62, label %nullDerefThen45, label %nullDerefElse46

nullDerefThen45:                                  ; preds = %nullDerefElse43
  %63 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 23)
  call void @exit(i32 -1)
  br label %nullDerefElse46

nullDerefElse46:                                  ; preds = %nullDerefThen45, %nullDerefElse43
  %64 = getelementptr inbounds %i32arrarr, %i32arrarr* %61, i64 0, i32 2
  %65 = load i32, i32* %64, align 4
  %.not = icmp slt i32 %56, %65
  br i1 %.not, label %boundsCheckElse48, label %boundsCheckThen47

boundsCheckThen47:                                ; preds = %nullDerefElse46
  %66 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([72 x i8], [72 x i8]* @outOfBoundsFormat, i64 0, i64 0), i32 23, i32 %56, i32 %65)
  call void @exit(i32 -1)
  br label %boundsCheckElse48

boundsCheckElse48:                                ; preds = %boundsCheckThen47, %nullDerefElse46
  %67 = sext i32 %56 to i64
  %68 = icmp eq %i32arr* %baseArrPtr44, null
  br i1 %68, label %nullDerefThen49, label %nullDerefElse50

nullDerefThen49:                                  ; preds = %boundsCheckElse48
  %69 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 23)
  call void @exit(i32 -1)
  br label %nullDerefElse50

nullDerefElse50:                                  ; preds = %nullDerefThen49, %boundsCheckElse48
  %70 = getelementptr inbounds %i32arr, %i32arr* %baseArrPtr44, i64 %67, i32 1
  %baseArrPtr51 = load i32*, i32** %70, align 8
  %71 = load i32, i32* %i, align 4
  %72 = load %i32arrarr*, %i32arrarr** %x, align 8
  %73 = icmp eq %i32arrarr* %72, null
  br i1 %73, label %nullDerefThen52, label %nullDerefElse53

nullDerefThen52:                                  ; preds = %nullDerefElse50
  %74 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 23)
  call void @exit(i32 -1)
  br label %nullDerefElse53

nullDerefElse53:                                  ; preds = %nullDerefThen52, %nullDerefElse50
  %75 = getelementptr inbounds %i32arrarr, %i32arrarr* %72, i64 0, i32 1
  %baseArrPtr54 = load %i32arr*, %i32arr** %75, align 8
  %76 = load %i32arrarr*, %i32arrarr** %x, align 8
  %77 = icmp eq %i32arrarr* %76, null
  br i1 %77, label %nullDerefThen55, label %nullDerefElse56

nullDerefThen55:                                  ; preds = %nullDerefElse53
  %78 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 23)
  call void @exit(i32 -1)
  br label %nullDerefElse56

nullDerefElse56:                                  ; preds = %nullDerefThen55, %nullDerefElse53
  %79 = getelementptr inbounds %i32arrarr, %i32arrarr* %76, i64 0, i32 2
  %80 = load i32, i32* %79, align 4
  %.not70 = icmp slt i32 %71, %80
  br i1 %.not70, label %boundsCheckElse58, label %boundsCheckThen57

boundsCheckThen57:                                ; preds = %nullDerefElse56
  %81 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([72 x i8], [72 x i8]* @outOfBoundsFormat, i64 0, i64 0), i32 23, i32 %71, i32 %80)
  call void @exit(i32 -1)
  br label %boundsCheckElse58

boundsCheckElse58:                                ; preds = %boundsCheckThen57, %nullDerefElse56
  %82 = sext i32 %71 to i64
  %83 = icmp eq %i32arr* %baseArrPtr54, null
  br i1 %83, label %nullDerefThen59, label %nullDerefElse60

nullDerefThen59:                                  ; preds = %boundsCheckElse58
  %84 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 23)
  call void @exit(i32 -1)
  br label %nullDerefElse60

nullDerefElse60:                                  ; preds = %nullDerefThen59, %boundsCheckElse58
  %85 = getelementptr inbounds %i32arr, %i32arr* %baseArrPtr54, i64 %82, i32 2
  %86 = load i32, i32* %85, align 4
  %.not71 = icmp slt i32 %55, %86
  br i1 %.not71, label %boundsCheckElse62, label %boundsCheckThen61

boundsCheckThen61:                                ; preds = %nullDerefElse60
  %87 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([72 x i8], [72 x i8]* @outOfBoundsFormat, i64 0, i64 0), i32 23, i32 %55, i32 %86)
  call void @exit(i32 -1)
  br label %boundsCheckElse62

boundsCheckElse62:                                ; preds = %boundsCheckThen61, %nullDerefElse60
  %88 = sext i32 %55 to i64
  %89 = getelementptr inbounds i32, i32* %baseArrPtr51, i64 %88
  %90 = load i32, i32* %89, align 4
  %add63 = add i32 %54, %90
  store i32 %add63, i32* %sum, align 4
  %91 = load i32, i32* %j, align 4
  %add64 = add i32 %91, 1
  br label %loopcond39

loopend65:                                        ; preds = %loopcond39
  %92 = load i32, i32* %i, align 4
  %add66 = add i32 %92, 1
  br label %loopcond36

loopend67:                                        ; preds = %loopcond36
  %93 = load i32, i32* %sum, align 4
  %94 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @printIntFormat, i64 0, i64 0), i32 %93)
  ret i32 0
}
