; ModuleID = 'Module'
source_filename = "Module"
target triple = "aarch64-unknown-linux-gnu"

%i32arr_Vtable_type = type { %Object_Vtable_type*, i8*, void (%Object*)*, void (%Object*)*, void (%i32arr*)*, void (%i32arr*, %i32arr_Vtable_type*, i32*, i32)* }
%Object_Vtable_type = type { %Object_Vtable_type*, i8*, void (%Object*)*, void (%Object*)* }
%Object = type { %Object_Vtable_type* }
%i32arr = type { %i32arr_Vtable_type*, i32*, i32 }
%i32arrarr_Vtable_type = type { %Object_Vtable_type*, i8*, void (%Object*)*, void (%Object*)*, void (%i32arrarr*)*, void (%i32arrarr*, %i32arrarr_Vtable_type*, %i32arr*, i32)* }
%i32arrarr = type { %i32arrarr_Vtable_type*, %i32arr*, i32 }

@printIntFormat = private constant [4 x i8] c"%d\0A\00", align 1
@castErrFormat = private constant [52 x i8] c"Line no: %d | Narrow cast err: %s is not a type %s\0A\00", align 1
@outOfBoundsFormat = private constant [72 x i8] c"Line: %d | Array out of bounds exception at line. Index:%d | Length:%d\0A\00", align 1
@negativeLenFormat = private constant [62 x i8] c"Line: %d | Array len cannot be negative. Length attempted:%d\0A\00", align 1
@nullDerefFormat = private constant [29 x i8] c"Line: %d | Null dereference\0A\00", align 1
@divByZeroFormat = private constant [37 x i8] c"Line: %d | Divide by zero exception\0A\00", align 1
@i32arr_class_name = private constant [7 x i8] c"i32arr\00", align 1
@i32arr_Vtable = global %i32arr_Vtable_type { %Object_Vtable_type* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @i32arr_class_name, i32 0, i32 0), void (%Object*)* @"~Object_Object", void (%Object*)* @Object_Object, void (%i32arr*)* @"~i32arr_i32arr", void (%i32arr*, %i32arr_Vtable_type*, i32*, i32)* @i32arr_Constructor }
@i32arrarr_class_name = private constant [10 x i8] c"i32arrarr\00", align 1
@i32arrarr_Vtable = global %i32arrarr_Vtable_type { %Object_Vtable_type* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @i32arrarr_class_name, i32 0, i32 0), void (%Object*)* @"~Object_Object", void (%Object*)* @Object_Object, void (%i32arrarr*)* @"~i32arrarr_i32arrarr", void (%i32arrarr*, %i32arrarr_Vtable_type*, %i32arr*, i32)* @i32arrarr_Constructor }
@Object_class_name = private constant [7 x i8] c"Object\00", align 1
@Object_Vtable = global %Object_Vtable_type { %Object_Vtable_type* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @Object_class_name, i32 0, i32 0), void (%Object*)* @"~Object_Object", void (%Object*)* @Object_Object }

declare i32 @printf(i8*, ...)

declare i8* @malloc(i32)

declare i8* @calloc(i32, i32)

declare void @free(i8*)

declare void @exit(i32)

define i1 @Object_IsA(%Object* %0, %Object_Vtable_type* %1, i8* %2) {
entry:
  %object = alloca %Object*, align 8
  store %Object* %0, %Object** %object, align 8
  %vtbl = alloca %Object_Vtable_type*, align 8
  store %Object_Vtable_type* %1, %Object_Vtable_type** %vtbl, align 8
  %name = alloca i8*, align 8
  store i8* %2, i8** %name, align 8
  %3 = load %Object*, %Object** %object, align 8
  %4 = ptrtoint %Object* %3 to i64
  %equal = icmp eq i64 %4, 0
  %not = xor i1 %equal, true
  br i1 %not, label %then, label %else12

then:                                             ; preds = %entry
  %5 = load %Object*, %Object** %object, align 8
  %6 = icmp eq %Object* %5, null
  br i1 %6, label %nullDerefThen1, label %nullDerefElse

nullDerefThen1:                                   ; preds = %then
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse

nullDerefElse:                                    ; preds = %nullDerefThen1, %then
  %8 = getelementptr inbounds %Object, %Object* %5, i32 0, i32 0
  %9 = load %Object_Vtable_type*, %Object_Vtable_type** %8, align 8
  store %Object_Vtable_type* %9, %Object_Vtable_type** %vtbl, align 8
  br label %loopcond

loopcond:                                         ; preds = %ifcont, %nullDerefElse
  %10 = load %Object_Vtable_type*, %Object_Vtable_type** %vtbl, align 8
  %11 = ptrtoint %Object_Vtable_type* %10 to i64
  %equal2 = icmp eq i64 %11, 0
  %not3 = xor i1 %equal2, true
  br i1 %not3, label %loop, label %loopend

loop:                                             ; preds = %loopcond
  %12 = load %Object_Vtable_type*, %Object_Vtable_type** %vtbl, align 8
  %13 = icmp eq %Object_Vtable_type* %12, null
  br i1 %13, label %nullDerefThen4, label %nullDerefElse5

nullDerefThen4:                                   ; preds = %loop
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse5

nullDerefElse5:                                   ; preds = %nullDerefThen4, %loop
  %15 = getelementptr inbounds %Object_Vtable_type, %Object_Vtable_type* %12, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = load i8*, i8** %name, align 8
  %18 = ptrtoint i8* %16 to i64
  %19 = ptrtoint i8* %17 to i64
  %equal6 = icmp eq i64 %18, %19
  br i1 %equal6, label %then7, label %else

then7:                                            ; preds = %nullDerefElse5
  br label %loopend

else:                                             ; preds = %nullDerefElse5
  %20 = load %Object_Vtable_type*, %Object_Vtable_type** %vtbl, align 8
  %21 = icmp eq %Object_Vtable_type* %20, null
  br i1 %21, label %nullDerefThen8, label %nullDerefElse9

nullDerefThen8:                                   ; preds = %else
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse9

nullDerefElse9:                                   ; preds = %nullDerefThen8, %else
  %23 = getelementptr inbounds %Object_Vtable_type, %Object_Vtable_type* %20, i32 0, i32 0
  %24 = load %Object_Vtable_type*, %Object_Vtable_type** %23, align 8
  store %Object_Vtable_type* %24, %Object_Vtable_type** %vtbl, align 8
  br label %ifcont

ifcont:                                           ; preds = %nullDerefElse9
  br label %loopcond

loopend:                                          ; preds = %then7, %loopcond
  %25 = load %Object_Vtable_type*, %Object_Vtable_type** %vtbl, align 8
  %26 = ptrtoint %Object_Vtable_type* %25 to i64
  %equal10 = icmp eq i64 %26, 0
  %not11 = xor i1 %equal10, true
  br label %ifcont13

else12:                                           ; preds = %entry
  br label %ifcont13

ifcont13:                                         ; preds = %else12, %loopend
  %iftmp = phi i1 [ %not11, %loopend ], [ false, %else12 ]
  ret i1 %iftmp
}

define void @i32arr_Constructor(%i32arr* %0, %i32arr_Vtable_type* %1, i32* %2, i32 %3) {
entry:
  %this = alloca %i32arr*, align 8
  %super = alloca %i32arr*, align 8
  store %i32arr* %0, %i32arr** %super, align 8
  store %i32arr* %0, %i32arr** %this, align 8
  %vtable = alloca %i32arr_Vtable_type*, align 8
  store %i32arr_Vtable_type* %1, %i32arr_Vtable_type** %vtable, align 8
  %data = alloca i32*, align 8
  store i32* %2, i32** %data, align 8
  %length = alloca i32, align 4
  store i32 %3, i32* %length, align 4
  %4 = load %i32arr_Vtable_type*, %i32arr_Vtable_type** %vtable, align 8
  %5 = load %i32arr*, %i32arr** %this, align 8
  %6 = icmp eq %i32arr* %5, null
  br i1 %6, label %nullDerefThen1, label %nullDerefElse

nullDerefThen1:                                   ; preds = %entry
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse

nullDerefElse:                                    ; preds = %nullDerefThen1, %entry
  %8 = getelementptr inbounds %i32arr, %i32arr* %5, i32 0, i32 0
  store %i32arr_Vtable_type* %4, %i32arr_Vtable_type** %8, align 8
  %9 = load i32*, i32** %data, align 8
  %10 = load %i32arr*, %i32arr** %this, align 8
  %11 = icmp eq %i32arr* %10, null
  br i1 %11, label %nullDerefThen2, label %nullDerefElse3

nullDerefThen2:                                   ; preds = %nullDerefElse
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse3

nullDerefElse3:                                   ; preds = %nullDerefThen2, %nullDerefElse
  %13 = getelementptr inbounds %i32arr, %i32arr* %10, i32 0, i32 1
  store i32* %9, i32** %13, align 8
  %14 = load i32, i32* %length, align 4
  %15 = load %i32arr*, %i32arr** %this, align 8
  %16 = icmp eq %i32arr* %15, null
  br i1 %16, label %nullDerefThen4, label %nullDerefElse5

nullDerefThen4:                                   ; preds = %nullDerefElse3
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse5

nullDerefElse5:                                   ; preds = %nullDerefThen4, %nullDerefElse3
  %18 = getelementptr inbounds %i32arr, %i32arr* %15, i32 0, i32 2
  store i32 %14, i32* %18, align 4
  ret void
}

define void @"~i32arr_i32arr"(%i32arr* %0) {
entry:
  %this = alloca %i32arr*, align 8
  %super = alloca %i32arr*, align 8
  store %i32arr* %0, %i32arr** %super, align 8
  store %i32arr* %0, %i32arr** %this, align 8
  %1 = load %i32arr*, %i32arr** %this, align 8
  %2 = icmp eq %i32arr* %1, null
  br i1 %2, label %nullDerefThen1, label %nullDerefElse

nullDerefThen1:                                   ; preds = %entry
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse

nullDerefElse:                                    ; preds = %nullDerefThen1, %entry
  %4 = getelementptr inbounds %i32arr, %i32arr* %1, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = bitcast i32* %5 to i8*
  call void @free(i8* %6)
  ret void
}

define void @i32arrarr_Constructor(%i32arrarr* %0, %i32arrarr_Vtable_type* %1, %i32arr* %2, i32 %3) {
entry:
  %this = alloca %i32arrarr*, align 8
  %super = alloca %i32arrarr*, align 8
  store %i32arrarr* %0, %i32arrarr** %super, align 8
  store %i32arrarr* %0, %i32arrarr** %this, align 8
  %vtable = alloca %i32arrarr_Vtable_type*, align 8
  store %i32arrarr_Vtable_type* %1, %i32arrarr_Vtable_type** %vtable, align 8
  %data = alloca %i32arr*, align 8
  store %i32arr* %2, %i32arr** %data, align 8
  %length = alloca i32, align 4
  store i32 %3, i32* %length, align 4
  %4 = load %i32arrarr_Vtable_type*, %i32arrarr_Vtable_type** %vtable, align 8
  %5 = load %i32arrarr*, %i32arrarr** %this, align 8
  %6 = icmp eq %i32arrarr* %5, null
  br i1 %6, label %nullDerefThen1, label %nullDerefElse

nullDerefThen1:                                   ; preds = %entry
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse

nullDerefElse:                                    ; preds = %nullDerefThen1, %entry
  %8 = getelementptr inbounds %i32arrarr, %i32arrarr* %5, i32 0, i32 0
  store %i32arrarr_Vtable_type* %4, %i32arrarr_Vtable_type** %8, align 8
  %9 = load %i32arr*, %i32arr** %data, align 8
  %10 = load %i32arrarr*, %i32arrarr** %this, align 8
  %11 = icmp eq %i32arrarr* %10, null
  br i1 %11, label %nullDerefThen2, label %nullDerefElse3

nullDerefThen2:                                   ; preds = %nullDerefElse
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse3

nullDerefElse3:                                   ; preds = %nullDerefThen2, %nullDerefElse
  %13 = getelementptr inbounds %i32arrarr, %i32arrarr* %10, i32 0, i32 1
  store %i32arr* %9, %i32arr** %13, align 8
  %14 = load i32, i32* %length, align 4
  %15 = load %i32arrarr*, %i32arrarr** %this, align 8
  %16 = icmp eq %i32arrarr* %15, null
  br i1 %16, label %nullDerefThen4, label %nullDerefElse5

nullDerefThen4:                                   ; preds = %nullDerefElse3
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse5

nullDerefElse5:                                   ; preds = %nullDerefThen4, %nullDerefElse3
  %18 = getelementptr inbounds %i32arrarr, %i32arrarr* %15, i32 0, i32 2
  store i32 %14, i32* %18, align 4
  ret void
}

define void @"~i32arrarr_i32arrarr"(%i32arrarr* %0) {
entry:
  %this = alloca %i32arrarr*, align 8
  %super = alloca %i32arrarr*, align 8
  store %i32arrarr* %0, %i32arrarr** %super, align 8
  store %i32arrarr* %0, %i32arrarr** %this, align 8
  %1 = load %i32arrarr*, %i32arrarr** %this, align 8
  %2 = icmp eq %i32arrarr* %1, null
  br i1 %2, label %nullDerefThen1, label %nullDerefElse

nullDerefThen1:                                   ; preds = %entry
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i32 0, i32 0), i32 0)
  call void @exit(i32 -1)
  br label %nullDerefElse

nullDerefElse:                                    ; preds = %nullDerefThen1, %entry
  %4 = getelementptr inbounds %i32arrarr, %i32arrarr* %1, i32 0, i32 1
  %5 = load %i32arr*, %i32arr** %4, align 8
  %6 = bitcast %i32arr* %5 to i8*
  call void @free(i8* %6)
  ret void
}

define void @"~Object_Object"(%Object* %0) {
entry:
  %this = alloca %Object*, align 8
  %super = alloca %Object*, align 8
  store %Object* %0, %Object** %super, align 8
  store %Object* %0, %Object** %this, align 8
  ret void
}

define void @Object_Object(%Object* %0) {
entry:
  %this = alloca %Object*, align 8
  %super = alloca %Object*, align 8
  store %Object* %0, %Object** %super, align 8
  store %Object* %0, %Object** %this, align 8
  ret void
}

define i32 @main() {
entry:
  %a = alloca %i32arrarr*, align 8
  store %i32arrarr* null, %i32arrarr** %a, align 8
  br i1 false, label %negativeLenThen1, label %negativeLenCont

negativeLenThen1:                                 ; preds = %entry
  br label %negativeLenCont

negativeLenCont:                                  ; preds = %negativeLenThen1, %entry
  %0 = call dereferenceable_or_null(24) i8* @calloc(i32 1, i32 24)
  %1 = bitcast i8* %0 to %i32arrarr*
  %2 = call dereferenceable_or_null(120) i8* @calloc(i32 5, i32 24)
  %3 = bitcast i8* %2 to %i32arr*
  %constructorLoad = load void (%i32arrarr*, %i32arrarr_Vtable_type*, %i32arr*, i32)*, void (%i32arrarr*, %i32arrarr_Vtable_type*, %i32arr*, i32)** getelementptr inbounds (%i32arrarr_Vtable_type, %i32arrarr_Vtable_type* @i32arrarr_Vtable, i64 0, i32 5), align 8
  call void %constructorLoad(%i32arrarr* %1, %i32arrarr_Vtable_type* nonnull @i32arrarr_Vtable, %i32arr* %3, i32 5)
  %4 = bitcast %i32arrarr** %a to i8**
  store i8* %0, i8** %4, align 8
  br i1 false, label %negativeLenThen2, label %negativeLenCont3

negativeLenThen2:                                 ; preds = %negativeLenCont
  br label %negativeLenCont3

negativeLenCont3:                                 ; preds = %negativeLenThen2, %negativeLenCont
  %5 = call dereferenceable_or_null(24) i8* @calloc(i32 1, i32 24)
  %6 = bitcast i8* %5 to %i32arr*
  %7 = call dereferenceable_or_null(16) i8* @calloc(i32 4, i32 4)
  %8 = bitcast i8* %7 to i32*
  %constructorLoad4 = load void (%i32arr*, %i32arr_Vtable_type*, i32*, i32)*, void (%i32arr*, %i32arr_Vtable_type*, i32*, i32)** getelementptr inbounds (%i32arr_Vtable_type, %i32arr_Vtable_type* @i32arr_Vtable, i64 0, i32 5), align 8
  call void %constructorLoad4(%i32arr* %6, %i32arr_Vtable_type* nonnull @i32arr_Vtable, i32* %8, i32 4)
  %9 = load %i32arrarr*, %i32arrarr** %a, align 8
  %10 = icmp eq %i32arrarr* %9, null
  br i1 %10, label %nullDerefThen5, label %nullDerefElse

nullDerefThen5:                                   ; preds = %negativeLenCont3
  %11 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 4)
  call void @exit(i32 -1)
  br label %nullDerefElse

nullDerefElse:                                    ; preds = %nullDerefThen5, %negativeLenCont3
  %12 = getelementptr inbounds %i32arrarr, %i32arrarr* %9, i64 0, i32 1
  %baseArrPtr = load %i32arr*, %i32arr** %12, align 8
  %13 = load %i32arrarr*, %i32arrarr** %a, align 8
  %14 = icmp eq %i32arrarr* %13, null
  br i1 %14, label %nullDerefThen6, label %nullDerefElse7

nullDerefThen6:                                   ; preds = %nullDerefElse
  %15 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 4)
  call void @exit(i32 -1)
  br label %nullDerefElse7

nullDerefElse7:                                   ; preds = %nullDerefThen6, %nullDerefElse
  %16 = getelementptr inbounds %i32arrarr, %i32arrarr* %13, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %boundsCheckThen8, label %boundsCheckElse

boundsCheckThen8:                                 ; preds = %nullDerefElse7
  %19 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([72 x i8], [72 x i8]* @outOfBoundsFormat, i64 0, i64 0), i32 4, i32 0, i32 %17)
  call void @exit(i32 -1)
  br label %boundsCheckElse

boundsCheckElse:                                  ; preds = %boundsCheckThen8, %nullDerefElse7
  %loadRefTypeBeforeSave = load %i32arr, %i32arr* %6, align 8
  store %i32arr %loadRefTypeBeforeSave, %i32arr* %baseArrPtr, align 8
  %20 = load %i32arrarr*, %i32arrarr** %a, align 8
  %21 = icmp eq %i32arrarr* %20, null
  br i1 %21, label %nullDerefThen9, label %nullDerefElse10

nullDerefThen9:                                   ; preds = %boundsCheckElse
  %22 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 5)
  call void @exit(i32 -1)
  br label %nullDerefElse10

nullDerefElse10:                                  ; preds = %nullDerefThen9, %boundsCheckElse
  %23 = getelementptr inbounds %i32arrarr, %i32arrarr* %20, i64 0, i32 1
  %baseArrPtr11 = load %i32arr*, %i32arr** %23, align 8
  %24 = load %i32arrarr*, %i32arrarr** %a, align 8
  %25 = icmp eq %i32arrarr* %24, null
  br i1 %25, label %nullDerefThen12, label %nullDerefElse13

nullDerefThen12:                                  ; preds = %nullDerefElse10
  %26 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 5)
  call void @exit(i32 -1)
  br label %nullDerefElse13

nullDerefElse13:                                  ; preds = %nullDerefThen12, %nullDerefElse10
  %27 = getelementptr inbounds %i32arrarr, %i32arrarr* %24, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 1
  br i1 %29, label %boundsCheckThen14, label %boundsCheckElse15

boundsCheckThen14:                                ; preds = %nullDerefElse13
  %30 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([72 x i8], [72 x i8]* @outOfBoundsFormat, i64 0, i64 0), i32 5, i32 0, i32 %28)
  call void @exit(i32 -1)
  br label %boundsCheckElse15

boundsCheckElse15:                                ; preds = %boundsCheckThen14, %nullDerefElse13
  %31 = icmp eq %i32arr* %baseArrPtr11, null
  br i1 %31, label %nullDerefThen16, label %nullDerefElse17

nullDerefThen16:                                  ; preds = %boundsCheckElse15
  %32 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 5)
  call void @exit(i32 -1)
  br label %nullDerefElse17

nullDerefElse17:                                  ; preds = %nullDerefThen16, %boundsCheckElse15
  %33 = getelementptr inbounds %i32arr, %i32arr* %baseArrPtr11, i64 0, i32 1
  %baseArrPtr18 = load i32*, i32** %33, align 8
  %34 = load %i32arrarr*, %i32arrarr** %a, align 8
  %35 = icmp eq %i32arrarr* %34, null
  br i1 %35, label %nullDerefThen19, label %nullDerefElse20

nullDerefThen19:                                  ; preds = %nullDerefElse17
  %36 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 5)
  call void @exit(i32 -1)
  br label %nullDerefElse20

nullDerefElse20:                                  ; preds = %nullDerefThen19, %nullDerefElse17
  %37 = getelementptr inbounds %i32arrarr, %i32arrarr* %34, i64 0, i32 1
  %baseArrPtr21 = load %i32arr*, %i32arr** %37, align 8
  %38 = load %i32arrarr*, %i32arrarr** %a, align 8
  %39 = icmp eq %i32arrarr* %38, null
  br i1 %39, label %nullDerefThen22, label %nullDerefElse23

nullDerefThen22:                                  ; preds = %nullDerefElse20
  %40 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 5)
  call void @exit(i32 -1)
  br label %nullDerefElse23

nullDerefElse23:                                  ; preds = %nullDerefThen22, %nullDerefElse20
  %41 = getelementptr inbounds %i32arrarr, %i32arrarr* %38, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %42, 1
  br i1 %43, label %boundsCheckThen24, label %boundsCheckElse25

boundsCheckThen24:                                ; preds = %nullDerefElse23
  %44 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([72 x i8], [72 x i8]* @outOfBoundsFormat, i64 0, i64 0), i32 5, i32 0, i32 %42)
  call void @exit(i32 -1)
  br label %boundsCheckElse25

boundsCheckElse25:                                ; preds = %boundsCheckThen24, %nullDerefElse23
  %45 = icmp eq %i32arr* %baseArrPtr21, null
  br i1 %45, label %nullDerefThen26, label %nullDerefElse27

nullDerefThen26:                                  ; preds = %boundsCheckElse25
  %46 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 5)
  call void @exit(i32 -1)
  br label %nullDerefElse27

nullDerefElse27:                                  ; preds = %nullDerefThen26, %boundsCheckElse25
  %47 = getelementptr inbounds %i32arr, %i32arr* %baseArrPtr21, i64 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %48, 1
  br i1 %49, label %boundsCheckThen28, label %boundsCheckElse29

boundsCheckThen28:                                ; preds = %nullDerefElse27
  %50 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([72 x i8], [72 x i8]* @outOfBoundsFormat, i64 0, i64 0), i32 5, i32 0, i32 %48)
  call void @exit(i32 -1)
  br label %boundsCheckElse29

boundsCheckElse29:                                ; preds = %boundsCheckThen28, %nullDerefElse27
  store i32 44, i32* %baseArrPtr18, align 4
  %51 = load %i32arrarr*, %i32arrarr** %a, align 8
  %52 = icmp eq %i32arrarr* %51, null
  br i1 %52, label %nullDerefThen30, label %nullDerefElse31

nullDerefThen30:                                  ; preds = %boundsCheckElse29
  %53 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 6)
  call void @exit(i32 -1)
  br label %nullDerefElse31

nullDerefElse31:                                  ; preds = %nullDerefThen30, %boundsCheckElse29
  %54 = getelementptr inbounds %i32arrarr, %i32arrarr* %51, i64 0, i32 2
  %55 = load i32, i32* %54, align 4
  %sub = add i32 %55, -1
  %56 = load %i32arrarr*, %i32arrarr** %a, align 8
  %57 = icmp eq %i32arrarr* %56, null
  br i1 %57, label %nullDerefThen32, label %nullDerefElse33

nullDerefThen32:                                  ; preds = %nullDerefElse31
  %58 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 6)
  call void @exit(i32 -1)
  br label %nullDerefElse33

nullDerefElse33:                                  ; preds = %nullDerefThen32, %nullDerefElse31
  %59 = getelementptr inbounds %i32arrarr, %i32arrarr* %56, i64 0, i32 1
  %baseArrPtr34 = load %i32arr*, %i32arr** %59, align 8
  %60 = load %i32arrarr*, %i32arrarr** %a, align 8
  %61 = icmp eq %i32arrarr* %60, null
  br i1 %61, label %nullDerefThen35, label %nullDerefElse36

nullDerefThen35:                                  ; preds = %nullDerefElse33
  %62 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 6)
  call void @exit(i32 -1)
  br label %nullDerefElse36

nullDerefElse36:                                  ; preds = %nullDerefThen35, %nullDerefElse33
  %63 = getelementptr inbounds %i32arrarr, %i32arrarr* %60, i64 0, i32 2
  %64 = load i32, i32* %63, align 4
  %.not = icmp slt i32 %sub, %64
  br i1 %.not, label %boundsCheckElse38, label %boundsCheckThen37

boundsCheckThen37:                                ; preds = %nullDerefElse36
  %65 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([72 x i8], [72 x i8]* @outOfBoundsFormat, i64 0, i64 0), i32 6, i32 %sub, i32 %64)
  call void @exit(i32 -1)
  br label %boundsCheckElse38

boundsCheckElse38:                                ; preds = %boundsCheckThen37, %nullDerefElse36
  %66 = sext i32 %sub to i64
  %67 = icmp eq %i32arr* %baseArrPtr34, null
  br i1 %67, label %nullDerefThen39, label %nullDerefElse40

nullDerefThen39:                                  ; preds = %boundsCheckElse38
  %68 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 6)
  call void @exit(i32 -1)
  br label %nullDerefElse40

nullDerefElse40:                                  ; preds = %nullDerefThen39, %boundsCheckElse38
  %69 = getelementptr inbounds %i32arr, %i32arr* %baseArrPtr34, i64 %66, i32 1
  %baseArrPtr41 = load i32*, i32** %69, align 8
  %70 = load %i32arrarr*, %i32arrarr** %a, align 8
  %71 = icmp eq %i32arrarr* %70, null
  br i1 %71, label %nullDerefThen42, label %nullDerefElse43

nullDerefThen42:                                  ; preds = %nullDerefElse40
  %72 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 6)
  call void @exit(i32 -1)
  br label %nullDerefElse43

nullDerefElse43:                                  ; preds = %nullDerefThen42, %nullDerefElse40
  %73 = getelementptr inbounds %i32arrarr, %i32arrarr* %70, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  %sub44 = add i32 %74, -1
  %75 = load %i32arrarr*, %i32arrarr** %a, align 8
  %76 = icmp eq %i32arrarr* %75, null
  br i1 %76, label %nullDerefThen45, label %nullDerefElse46

nullDerefThen45:                                  ; preds = %nullDerefElse43
  %77 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 6)
  call void @exit(i32 -1)
  br label %nullDerefElse46

nullDerefElse46:                                  ; preds = %nullDerefThen45, %nullDerefElse43
  %78 = getelementptr inbounds %i32arrarr, %i32arrarr* %75, i64 0, i32 1
  %baseArrPtr47 = load %i32arr*, %i32arr** %78, align 8
  %79 = load %i32arrarr*, %i32arrarr** %a, align 8
  %80 = icmp eq %i32arrarr* %79, null
  br i1 %80, label %nullDerefThen48, label %nullDerefElse49

nullDerefThen48:                                  ; preds = %nullDerefElse46
  %81 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 6)
  call void @exit(i32 -1)
  br label %nullDerefElse49

nullDerefElse49:                                  ; preds = %nullDerefThen48, %nullDerefElse46
  %82 = getelementptr inbounds %i32arrarr, %i32arrarr* %79, i64 0, i32 2
  %83 = load i32, i32* %82, align 4
  %.not56 = icmp slt i32 %sub44, %83
  br i1 %.not56, label %boundsCheckElse51, label %boundsCheckThen50

boundsCheckThen50:                                ; preds = %nullDerefElse49
  %84 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([72 x i8], [72 x i8]* @outOfBoundsFormat, i64 0, i64 0), i32 6, i32 %sub44, i32 %83)
  call void @exit(i32 -1)
  br label %boundsCheckElse51

boundsCheckElse51:                                ; preds = %boundsCheckThen50, %nullDerefElse49
  %85 = sext i32 %sub44 to i64
  %86 = icmp eq %i32arr* %baseArrPtr47, null
  br i1 %86, label %nullDerefThen52, label %nullDerefElse53

nullDerefThen52:                                  ; preds = %boundsCheckElse51
  %87 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @nullDerefFormat, i64 0, i64 0), i32 6)
  call void @exit(i32 -1)
  br label %nullDerefElse53

nullDerefElse53:                                  ; preds = %nullDerefThen52, %boundsCheckElse51
  %88 = getelementptr inbounds %i32arr, %i32arr* %baseArrPtr47, i64 %85, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = icmp slt i32 %89, 1
  br i1 %90, label %boundsCheckThen54, label %boundsCheckElse55

boundsCheckThen54:                                ; preds = %nullDerefElse53
  %91 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([72 x i8], [72 x i8]* @outOfBoundsFormat, i64 0, i64 0), i32 6, i32 0, i32 %89)
  call void @exit(i32 -1)
  br label %boundsCheckElse55

boundsCheckElse55:                                ; preds = %boundsCheckThen54, %nullDerefElse53
  %92 = load i32, i32* %baseArrPtr41, align 4
  %93 = call i32 (i8*, ...) @printf(i8* noundef nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @printIntFormat, i64 0, i64 0), i32 %92)
  ret i32 0
}
