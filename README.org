* Vilangu in OCaml
Vilangu is a compiler for the [[https://www.cs.unh.edu/~cs712/T_language_spec/][T-lang]]. Compiler frontend is written in
OCaml. The backend uses the LLVM infrastructure to generate code for
any desired architecture.
** How to run?
#+begin_src bash
  make vilangu
  # inside docker container
  bash run.sh
#+end_src
** Compiler options
#+begin_src bash
     The tc script also takes a few optional commandline options:

       -AST: dumps the AST to an HTML file (file.t --> file.html) after
             semantic analysis, if semantic analysis is run; otherwise
             it dumps the tree after the parser is done.

       -CT: dumps the class table after semantic analysis.

       -noAnalyze: disable semantic analysis and code generation

       -log: display the internal translator log messages

       -noLLVM: disable processing the LLVM assembly language

       -ll: keep the LLVM assembly language file produced by the compiler

       -bc: keep the LLVM bytecode file produced by assembling the LLVM
            assembly language file

       -s: keep the Intel assembly language file

       -o outFile: name the executable file  
#+end_src
** Pending tasks
- [ ] Ref types init to null at variable declaration time. Handle the case when they are used
  without proper initialization.
- [X] Array type should be int*.
- [X] Respect multiple ranks
- [X] Generate loop blocks to init array based on rank
- [X] Return type of subscript var should be pointer
- [X] Type should also keep track of length and ptr
- [X] Add support for length field
- [ ] Warn users of unreachable code blocks after break; continue statements
- [X] Subscript exprs should eval to int type of rank 0
- [ ] Warn Unused variables
- [X] Dockerize things
  - [X] Install ocaml libs
  - [X] Install protocol buffer
- [ ] nounwind attribute to main, malloc, free, printf
- 
    
** Useful links
  - https://github.com/ksrky/tiger/tree/master
  - [[https://www.cs.columbia.edu/~sedwards/classes/2002/w4115/tiger.pdf][Tiger Lang specs]]
  - [[https://github.com/xandkar/tiger.ml][Tiger with tests upto chap 4]]
  - [[https://github.com/hkveeranki/Decaf-Compiler/tree/master][Decaf compiler]]
  - [[https://github.com/mukul-rathi/bolt/tree/master][Bolt compiler]]

** Note
== We're Using GitHub Under Protest ==

This project is currently hosted on GitHub.  This is not ideal; GitHub is a
proprietary, trade-secret system that is not Free and Open Souce Software
(FOSS).  We are deeply concerned about using a proprietary system like GitHub
to develop our FOSS project.  We have an
[open {bug ticket, mailing list thread, etc.} ](INSERT_LINK) where the
project contributors are actively discussing how we can move away from GitHub
in the long term.  We urge you to read about the
[Give up GitHub](https://GiveUpGitHub.org) campaign from
[the Software Freedom Conservancy](https://sfconservancy.org) to understand
some of the reasons why GitHub is not a good place to host FOSS projects.

Any use of this project's code by GitHub Copilot, past or present, is done
without our permission.  We do not consent to GitHub's use of this project's
code in Copilot.

![Logo of the GiveUpGitHub campaign](https://sfconservancy.org/img/GiveUpGitHub.png)
